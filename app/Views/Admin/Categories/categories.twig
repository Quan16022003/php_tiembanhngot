{% set page = 'categories' %}
{% extends './layout.twig' %}

{% block content %}
    <head>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <title>
            {% block title %}Danh mục{% endblock %}
        </title>
        <link rel="stylesheet" href="/public/css/global.css">
    </head>
    <div class="container-fluid overflow-auto">
        <div class="row mb-3">
            <div class="col-md-6">
                <form id="search-form" class="form-inline">
                    <div class="input-group">
                        <label for="search-input"></label>
                        <input type="text" class="form-control" id="search-input"
                               placeholder="Nhập từ khóa tìm kiếm">
                        <div class="input-group-append">
                            <button class="btn btn-secondary" type="submit" id="button-search">Tìm kiếm</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-6 text-md-right">
                <a href="/admin/categories/create" class="btn btn-success">Thêm danh mục mới</a>
            </div>
        </div>
        <div class="row rounded">
            <div class="col ">
                <table class="datatables-categories table border-top dataTable no-footer dtr-column collapsed">
                    <thead>
                    <tr>
                        <th onclick="sortTable(0)">ID</th>
                        <th onclick="sortTable(1)">Tên danh mục</th>
                        <th>Thao tác</th>
                    </tr>
                    </thead>
                    <tbody id="results-body">
                    {% for category in categories %}
                        <tr>
                            <td>{{ category.id }}</td>
                            <td>{{ category.name }}</td>
                            <td class="operation-button">
                                <button class="btn btn-info btn-warning"
                                        onclick="editCategory('{{ category.id }}')">
                                    Sửa
                                </button>
                                <button class="btn btn-danger"
                                        onclick="deleteCategory('{{ category.id }}')">Xóa
                                </button>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        {% for i in 1..totalPages %}
                            <li class="page-item {% if i == currentPage %}active{% endif %}">
                                <a class="page-link pagination-link" href="#" data-page="{{ i }}">{{ i }}</a>
                            </li>
                        {% endfor %}
                    </ul>
                </nav>
            </div>
        </div>
    </div>
    <style>
        td {
            white-space: nowrap;
            word-break: break-word;
            max-width: fit-content;
        }

        th {
            cursor: pointer;
        }
    </style>

{% endblock %}
{% block scripts %}
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        // Sử dụng jQuery để xử lý sự kiện click trên các liên kết phân trang
        $(document).on('click', '.pagination-link', function (event) {
            event.preventDefault();
            var page = $(this).data('page');
            $.ajax({
                url: '/admin/categories?page=' + page,
                method: 'GET',
                success: function (response) {
                    // Cập nhật nội dung của trang với dữ liệu mới
                    $('body').html(response);
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu có
                    console.error('Error:', error);
                }
            });
        });


        let sortStates = {}; // Lưu trữ trạng thái sắp xếp cho mỗi cột

        // Hàm sắp xếp bảng theo cột
        function sortTable(columnIndex) {
            let table, rows, switching, i, x, y, shouldSwitch;
            table = document.querySelector(".table");
            switching = true;

            // Kiểm tra nếu đã có trạng thái sắp xếp cho cột này
            if (!sortStates[columnIndex]) {
                sortStates[columnIndex] = "asc"; // Nếu không, mặc định là sắp xếp tăng dần
            } else {
                // Đảo ngược trạng thái sắp xếp nếu đã tồn tại
                sortStates[columnIndex] = sortStates[columnIndex] === "asc" ? "desc" : "asc";
            }

            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("td")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("td")[columnIndex];
                    let xValue = isNaN(parseFloat(x.innerHTML)) ? x.innerHTML.toLowerCase() : parseFloat(x.innerHTML);
                    let yValue = isNaN(parseFloat(y.innerHTML)) ? y.innerHTML.toLowerCase() : parseFloat(y.innerHTML);

                    // Sắp xếp tăng dần hoặc giảm dần tùy thuộc vào trạng thái
                    if ((sortStates[columnIndex] === "asc" && xValue > yValue) || (sortStates[columnIndex] === "desc" && xValue < yValue)) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                }
            }
        }

        // Hàm xử lý khi nhấp vào nút sửa
        function editCategory(categoryID) {
            window.location.href = "/admin/categories/edit/" + categoryID;
        }

        // Hàm xử lý khi nhấp vào nút xóa
        function deleteCategory(categoryID) {
            if (confirm("Bạn có chắc chắn muốn xóa danh mục này không?")) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "/admin/categories/delete/" + categoryID, true);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === XMLHttpRequest.DONE) {
                        if (xhr.status === 200) {
                            const response = JSON.parse(xhr.responseText);
                            if (response.success) {
                                location.reload();
                            } else {
                                console.error("Xóa danh mục thất bại.");
                            }
                        } else {
                            console.error("Có lỗi xảy ra khi gửi yêu cầu xóa danh mục.");
                        }
                    }
                };
                xhr.send("categoryId=" + categoryID);
            }
        }


        // Xử lý sự kiện submit form tìm kiếm
        document.getElementById('search-form').addEventListener('input', function (event) {
            event.preventDefault(); // Ngăn chặn việc gửi yêu cầu tìm kiếm mặc định của form

            const query = document.getElementById('search-input').value;

            // Thực hiện tìm kiếm bằng cách gửi yêu cầu HTTP đến máy chủ và nhận kết quả
            performSearch(query);
        });

        // Hàm tìm kiếm
        function performSearch(query) {
            fetch('/admin/categories/search', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({searchText: query}),
            })
                .then(response => response.json())
                .then(results => {
                    // Xóa bảng kết quả tìm kiếm cũ (nếu có)
                    document.getElementById('results-body').innerHTML = '';

                    // Hiển thị kết quả tìm kiếm mới
                    results.forEach(result => {
                        const row = document.createElement('tr');

                        row.innerHTML = `<td>${result.id}</td>
                                 <td>${result.name}</td>
                                 <td class="operation-button">
                                    <button class="btn btn-info btn-warning" onclick="editCategory('${result.id}')">Sửa</button>
                                    <button class="btn btn-danger" onclick="deleteCategory('${result.id}')">Xóa</button>
                                 </td>`;
                        document.getElementById('results-body').appendChild(row);
                    });
                })
                .catch(error => {
                    console.error('Lỗi khi lấy kết quả tìm kiếm:', error);
                });
        }

    </script>
{% endblock %}
